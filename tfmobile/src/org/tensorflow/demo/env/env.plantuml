@startuml

title __ENV's Class Diagram__\n

  namespace org.tensorflow.demo {
    namespace env {
      class org.tensorflow.demo.env.BorderedText {
          - exteriorPaint : Paint
          - interiorPaint : Paint
          - textSize : float
          + BorderedText()
          + BorderedText()
          + drawLines()
          + drawText()
          + getTextBounds()
          + getTextSize()
          + setAlpha()
          + setExteriorColor()
          + setInteriorColor()
          + setTextAlign()
          + setTypeface()
      }
    }
  }
  

  namespace org.tensorflow.demo {
    namespace env {
      class org.tensorflow.demo.env.ImageUtils {
          {static} ~ kMaxChannelValue : int
          {static} - LOGGER : Logger
          {static} + convertImageToBitmap()
          {static} + convertYUV420ToARGB8888()
          {static} + cropAndRescaleBitmap()
          {static} + getTransformationMatrix()
          {static} + getYUVByteSize()
          {static} + saveBitmap()
          {static} - YUV2RGB()
          {static} - convertByteToInt()
          {static} - fillBytes()
      }
    }
  }
  

  namespace org.tensorflow.demo {
    namespace env {
      class org.tensorflow.demo.env.Logger {
          {static} - DEFAULT_MIN_LOG_LEVEL : int
          {static} - DEFAULT_TAG : String
          {static} - IGNORED_CLASS_NAMES : Set<String>
          - messagePrefix : String
          - minLogLevel : int
          - tag : String
          + Logger()
          + Logger()
          + Logger()
          + Logger()
          + Logger()
          + d()
          + d()
          + e()
          + e()
          + i()
          + i()
          + isLoggable()
          + setMinLogLevel()
          + v()
          + v()
          + w()
          + w()
          {static} - getCallerSimpleName()
          - toMessage()
      }
    }
  }
  

  namespace org.tensorflow.demo {
    namespace env {
      class org.tensorflow.demo.env.Size {
          + height : int
          {static} + serialVersionUID : long
          + width : int
          + Size()
          + Size()
          + aspectRatio()
          + compareTo()
          {static} + dimensionsAsString()
          + equals()
          {static} + getRotatedSize()
          + hashCode()
          {static} + parseFromString()
          {static} + sizeListToString()
          {static} + sizeStringToList()
          + toString()
      }
    }
  }
  

  namespace org.tensorflow.demo {
    namespace env {
      class org.tensorflow.demo.env.SplitTimer {
          - lastCpuTime : long
          - lastWallTime : long
          + SplitTimer()
          + endSplit()
          + newSplit()
      }
    }
  }
  

  org.tensorflow.demo.env.Size .up.|> java.io.Serializable
  org.tensorflow.demo.env.Size .up.|> java.lang.Comparable
  org.tensorflow.demo.env.SplitTimer o-- org.tensorflow.demo.env.Logger : logger


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
